@import "sass-essentials";

.filter {
  @include reset-list;

  display: flex;
  flex-wrap: wrap;
  gap: 0.8rem clamp(0.8rem, 1.6vw, 1.2rem);
  margin-block: 2.4rem 1.2rem;
  font-size: $h6-font-size;
  text-transform: lowercase;
  line-height: $base-line-height-heading;

  @media (hover) and (prefers-reduced-motion: no-preference) {
    &:has(.filter__item:hover) > .filter__item:not(:hover),
    &:has(.filter__item:focus-within) > .filter__item:not(:focus-within) {
      opacity: 0.8;
      transform: scale(0.94);
    }
  }

  &__item {
    transform-origin: center bottom;
    transition: transform $transition-duration $easeInOutCubic, opacity $transition-duration-slow $easeInOutCubic;
  }

  &__link {
    text-decoration: none;
    display: inline-block;
    padding-block: 0.1rem 0.4rem;
    padding-inline: 1.2rem;
    border-radius: 1.2rem;
    border: thin solid var(--fava-border-interactive);
    font-weight: 300;

    @media screen and (forced-colors: active) {
      color: ButtonText;
      background-color: ButtonFace;
      border-color: ButtonBorder;
    }

    &:hover,
    &:focus,
    &[aria-current*="page"] {
      @include shadow();

      border-color: var(--fava-border-focus);
      background-color: var(--fava-background-focus);
      transform: translateY(-0.1rem);

      @media (prefers-reduced-motion: reduce) {
        transform: translateY(0);
      }
    }

    &[aria-current*="page"] {
      color: var(--fava-link-active);
      background-color: var(--fava-background-active);
      transform: translateY(0);
      font-weight: 400;
      letter-spacing: 0.02em;

      &:hover,
      &:focus {
        transform: translateY(-0.1rem);

        @media (prefers-reduced-motion: reduce) {
          transform: translateY(0);
        }
      }
    }
  }
}