@use "sass:math";
@import "sass-essentials";

.teaser {
  // Variables
  $border-size: 0.1rem;
  $corner-size: 4.2rem;

  // Calculated
  $squareroot:  ($border-size / 1rem * $border-size / 1rem / 2);
  $pythagoras:  ((sqrt($squareroot) * 1rem) + $corner-size);
  $pythagoras-inner: ($corner-size - ((sqrt($squareroot) * 1rem)));

  // Declarations
  @include transition(cosmetic);

  position: relative;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  filter: drop-shadow(0 0 0.3rem rgba(red($darkpetrol), green($darkpetrol), blue($darkpetrol), 0.1));
  border: $border-size solid $lightgray;

  @supports (clip-path: initial) {
    border: none;
    padding: $border-size;
  }

  &::after {
    // Pseudo border
    @include transition(cosmetic);

    @supports (clip-path: initial) {
      content: '';
      position: absolute;
      inset: 0;
      z-index: -1;
      background-color: $lightgray;
    }

    .overview__item:nth-child(odd) & {
      // Bottom right corner
      clip-path: polygon(0 0, 0 100%, $border-size 100%, $border-size $border-size, calc(100% - #{$border-size}) $border-size, calc(100% - #{$border-size}) calc(100% - #{$pythagoras}), calc(100% - #{$pythagoras}) calc(100% - #{$border-size}), $border-size calc(100% - #{$border-size}), $border-size 100%, calc(100% - #{$corner-size}) 100%, 100% calc(100% - #{$corner-size}), 100% 0);
    }

    .overview__item:nth-child(even) & {
      // Top left corner
      clip-path: polygon(0 $corner-size, 0 100%, $border-size 100%, $border-size $pythagoras, $pythagoras $border-size, calc(100% - #{$border-size}) $border-size, calc(100% - #{$border-size}) calc(100% - #{$border-size}), $border-size calc(100% - #{$border-size}), $border-size 100%, 100% 100%, 100% 0, $corner-size 0);
    }
  }

  &__content {
    flex-grow: 1;
    padding: 1.8rem 2rem 3.2rem;
    filter: none;

    &::after {
      @include transition(cosmetic);

      content: '';
      position: absolute;
      inset: 0;
      z-index: -1;
      background-color: $color-base-background;
    }

    .overview__item:nth-child(odd) &::after {
      // Bottom right corner
      clip-path: polygon(0 0, 100% 0, 100% calc(100% - #{$pythagoras-inner}), calc(100% - #{$pythagoras-inner}) 100%, 0 100%);
    }

    .overview__item:nth-child(even) &::after {
      // Top left corner
      clip-path: polygon($pythagoras-inner 0, 100% 0, 100% 100%, 0 100%, 0 $pythagoras-inner);
    }
  }

  &__image {
    order: -1;
    height: 16rem;
    overflow: hidden;
    border-bottom: $border-size solid $lightgray;

    .overview__item:nth-child(even) & {
      // Top left corner
      clip-path: polygon($pythagoras-inner 0, 100% 0, 100% 100%, 0 100%, 0 $pythagoras-inner);
    }

    .teaser--sound & {
      height: auto;
    }

    .overview--large & {
      height: 20rem;
    }

    img {
      @include transition(all);

      object-fit: cover;
      height: 100%;
      width: 100%;

      .teaser--sound & {
        aspect-ratio: 1;
      }
    }
  }

  &__title {
    @include font-size(h3);

    margin-top: 0;
  }

  &__link {
    &::before {
      position: absolute;
      content: '';
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 1;
    }
  }

  &:active,
  &:focus,
  &:focus-within,
  &:hover {
    border-color: $petrol;
    transform: translateY(-0.1rem);

    &::after {
      @supports (clip-path: initial) {
        background-color: $petrol;
      }
    }

    .teaser__content::after {
      background-color: lighten($color-base-background, 0.2);
    }

    .teaser__image img {
      //transform: scale(1.02);
    }
  }

  &:focus-within,
  &:focus {
    filter: drop-shadow(0 0 0.3rem rgba(red($petrol), green($petrol), blue($petrol), 0.3));

    &:not(:focus-visible) {
      .teaser__content::after {
        background-color: lighten($color-base-background, 0.4);
      }
    }
  }

  &:focus-within {

    // Focus with a keyboard
    a:focus-visible {
      &::before {
        outline: thin dashed currentColor;
        outline-offset: 0.6rem;
      }
    }

    // Focus with a mouse, touch, or stylus
    a:focus {
      &, &:not(:focus-visible)::before {
        outline: none;
      }
    }
  }

  // Ajuinvrij
  &.is-ajuinvrij {
    $label-size: 3.2rem;
    $label-offset-x: 1.8rem;
    $label-offset-y: 1.2rem;

    position: relative;
    padding-bottom: (1/2 * $label-size);

    &::after {
      content: '';
      position: absolute;
      width: $label-size;
      height: $label-size;
      right: $label-offset-x;
      bottom: $label-offset-y;
      z-index: 0;
      border-radius: (1/2 * $label-size);
      background-image: url(../../../images/ajuinvrij.svg);
      background-size: contain;
    }
  }
}
